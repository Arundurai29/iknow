"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/vimal/page",{

/***/ "(app-pages-browser)/./utility/index.js":
/*!**************************!*\
  !*** ./utility/index.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   iKnowUtilits: function() { return /* binding */ iKnowUtilits; }\n/* harmony export */ });\nconst iKnowUtilits = {\n    dataImage () {\n        let d = document.querySelectorAll(\"[data-img-url\");\n        for(let i = 0; i < d.length; i++){\n            const element = d[i];\n            element.style.backgroundImage = \"url(\".concat(element.getAttribute(\"data-img-url\"), \")\");\n        }\n    },\n    preloader () {\n        let isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ? true : false;\n        let preloader = document.getElementById(\"preloader\");\n        if (preloader) {\n            if (!isMobile) {\n                setTimeout(function() {\n                    preloader.classList.add(\"preloaded\");\n                }, 800);\n                setTimeout(function() {\n                    preloader.remove();\n                }, 2000);\n            } else {\n                preloader.remove();\n            }\n        }\n        setTimeout(()=>{\n            document.querySelector(\"body\").classList.add(\"opened\");\n        }, 3000);\n    },\n    customCursor () {\n        var myCursor = document.querySelectorAll(\".mouse-cursor\"), hamburger = document.querySelector(\".hamburger\"), kura_tm_topbar = document.querySelector(\".kura_tm_topbar \"), pointer = document.querySelector(\".cursor-pointer\"), e = document.querySelector(\".cursor-inner\"), t = document.querySelector(\".cursor-outer\");\n        function mouseEvent(element) {\n            element.addEventListener(\"mouseenter\", function() {\n                e.classList.add(\"cursor-hover\"), t.classList.add(\"cursor-hover\");\n            });\n            element.addEventListener(\"mouseleave\", function() {\n                e.classList.remove(\"cursor-hover\"), t.classList.remove(\"cursor-hover\");\n            });\n        }\n        if (myCursor.length) {\n            if (document.body) {\n                let n, i = 0, o = !1;\n                window.onmousemove = function(s) {\n                    // console.log(document.querySelector(this));\n                    o || (t.style.transform = \"translate(\" + s.clientX + \"px, \" + s.clientY + \"px)\"), e.style.transform = \"translate(\" + s.clientX + \"px, \" + s.clientY + \"px)\", n = s.clientY, i = s.clientX;\n                }, document.body.addEventListener(\"mouseenter\", // \"a,.kura_tm_topbar .trigger, .cursor-pointer\",\n                function() {\n                    let a = document.querySelectorAll(\"a\");\n                    e.classList.add(\"cursor-inner\"), t.classList.add(\"cursor-outer\");\n                    for(let i = 0; i < a.length; i++){\n                        const element = a[i];\n                        mouseEvent(element);\n                    }\n                    hamburger && mouseEvent(hamburger);\n                    kura_tm_topbar && mouseEvent(kura_tm_topbar);\n                    pointer && mouseEvent(pointer);\n                }), e.style.visibility = \"visible\", t.style.visibility = \"visible\";\n            }\n        }\n    },\n    imgToSVG () {\n        document.querySelectorAll(\"img.svg\").forEach((el)=>{\n            const imgID = el.getAttribute(\"id\");\n            const imgClass = el.getAttribute(\"class\");\n            const imgURL = el.getAttribute(\"src\");\n            fetch(imgURL).then((data)=>data.text()).then((response)=>{\n                const parser = new DOMParser();\n                const xmlDoc = parser.parseFromString(response, \"text/html\");\n                let svg = xmlDoc.querySelector(\"svg\");\n                if (typeof imgID !== \"undefined\") {\n                    svg.setAttribute(\"id\", imgID);\n                }\n                if (typeof imgClass !== \"undefined\") {\n                    svg.setAttribute(\"class\", imgClass + \" replaced-svg\");\n                }\n                svg.removeAttribute(\"xmlns:a\");\n                if (el.parentNode) {\n                    el.parentNode.replaceChild(svg, el);\n                }\n            });\n        });\n    },\n    scrollSection () {\n        const sections = document.querySelectorAll(\".section_container\");\n        const navLi = document.querySelectorAll(\".anchor_nav li\");\n        let current = \"\";\n        sections.forEach((section)=>{\n            const sectionTop = section.offsetTop;\n            const sectionHeight = section.clientHeight;\n            if (pageYOffset >= sectionTop - sectionHeight / 3) {\n                current = section.getAttribute(\"id\");\n            }\n        });\n        navLi.forEach((li)=>{\n            if (current !== null) {\n                li.classList.remove(\"current\");\n            }\n            if (li.getElementsByTagName(\"a\")[0].getAttribute(\"href\") == \"#\".concat(current)) {\n                li.classList.add(\"current\");\n            }\n        });\n    },\n    menuHoverEffect () {\n        const mainMenus = document.querySelectorAll(\".main_menu li\");\n        mainMenus.forEach((menu)=>{\n            menu.addEventListener(\"mouseenter\", ()=>{\n                menu.classList.add(\"entered\");\n                const width = menu.getElementsByTagName(\"span\")[0].offsetWidth + menu.offsetWidth;\n                menu.style.width = \"20px\";\n            });\n            menu.addEventListener(\"mouseleave\", ()=>{\n                menu.classList.remove(\"entered\");\n                menu.style.width = \"80px\";\n            });\n        });\n    },\n    accordionToggle () {\n        let slideUp = function(target) {\n            let duration = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 500;\n            target.style.transitionProperty = \"height, margin, padding\";\n            target.style.transitionDuration = duration + \"ms\";\n            target.style.boxSizing = \"border-box\";\n            target.style.height = target.offsetHeight + \"px\";\n            target.offsetHeight;\n            target.style.overflow = \"hidden\";\n            target.style.height = 0;\n            target.style.paddingTop = 0;\n            target.style.paddingBottom = 0;\n            target.style.marginTop = 0;\n            target.style.marginBottom = 0;\n            window.setTimeout(()=>{\n                target.style.display = \"none\";\n                target.style.removeProperty(\"height\");\n                target.style.removeProperty(\"padding-top\");\n                target.style.removeProperty(\"padding-bottom\");\n                target.style.removeProperty(\"margin-top\");\n                target.style.removeProperty(\"margin-bottom\");\n                target.style.removeProperty(\"overflow\");\n                target.style.removeProperty(\"transition-duration\");\n                target.style.removeProperty(\"transition-property\");\n            //alert(\"!\");\n            }, duration);\n        };\n        let slideDown = function(target) {\n            let duration = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 500;\n            target.style.removeProperty(\"display\");\n            let display = window.getComputedStyle(target).display;\n            if (display === \"none\") display = \"block\";\n            target.style.display = display;\n            let height = target.offsetHeight;\n            target.style.overflow = \"hidden\";\n            target.style.height = 0;\n            target.style.paddingTop = 0;\n            target.style.paddingBottom = 0;\n            target.style.marginTop = 0;\n            target.style.marginBottom = 0;\n            target.offsetHeight;\n            target.style.boxSizing = \"border-box\";\n            target.style.transitionProperty = \"height, margin, padding\";\n            target.style.transitionDuration = duration + \"ms\";\n            target.style.height = height + \"px\";\n            target.style.removeProperty(\"padding-top\");\n            target.style.removeProperty(\"padding-bottom\");\n            target.style.removeProperty(\"margin-top\");\n            target.style.removeProperty(\"margin-bottom\");\n            window.setTimeout(()=>{\n                target.style.removeProperty(\"height\");\n                target.style.removeProperty(\"overflow\");\n                target.style.removeProperty(\"transition-duration\");\n                target.style.removeProperty(\"transition-property\");\n            }, duration);\n        };\n        let speedAnimation = 400;\n        const unorderest_li = document.querySelectorAll(\".unorderest_li\");\n        const aLinks = document.querySelectorAll(\".unorderest_li a.iknow_tm_full_link.tab_btn\");\n        for(let i = 0; i < aLinks.length; i++){\n            const link = aLinks[i];\n            link.onclick = function() {\n                const element = link.parentElement.parentElement;\n                var c = 0;\n                while(c < unorderest_li.length){\n                    if (unorderest_li[c] !== element) {\n                        unorderest_li[c].classList.remove(\"opened\");\n                        slideUp(unorderest_li[c].getElementsByClassName(\"details_wrapper\")[0], speedAnimation);\n                    }\n                    c++;\n                }\n                element.classList.toggle(\"opened\");\n                slideToggle(element.getElementsByClassName(\"details_wrapper\")[0], speedAnimation);\n            };\n        }\n        function slideToggle(target, duration) {\n            if (window.getComputedStyle(target).display === \"none\") {\n                slideDown(target, duration);\n            } else {\n                slideUp(target, duration);\n            }\n        }\n    },\n    menuTransition () {\n        var ccc = document.querySelectorAll(\".iknow_tm_sidebar_2 .ccc\");\n        var element = document.querySelector(\".iknow_tm_sidebar_2 .active a\");\n        var menuLinks = document.querySelectorAll(\".iknow_tm_sidebar_2 .menu a\");\n        function currentLink2(ccc, e) {\n            if (!e) return false;\n            var left = e.getBoundingClientRect().top;\n            var width = e.offsetWidth;\n            var menu = document.querySelector(\".iknow_tm_sidebar_2 .menu\");\n            var menuTop = menu.getBoundingClientRect().top;\n            e.parentElement.classList.remove(\"mleave\");\n            var siblings = Array.from(e.parentElement.parentElement.children).filter(function(el) {\n                return el !== e.parentElement;\n            });\n            siblings.forEach(function(sibling) {\n                sibling.classList.add(\"mleave\");\n            });\n            ccc.forEach(function(cccElement) {\n                cccElement.style.top = left - menuTop + \"px\";\n            });\n        }\n        menuLinks.forEach(function(menuLink) {\n            menuLink.addEventListener(\"mouseenter\", function() {\n                var e = this;\n                currentLink2(ccc, e);\n            });\n        });\n        var menu = document.querySelector(\".iknow_tm_sidebar_2 .menu\");\n        menu.addEventListener(\"mouseleave\", function() {\n            element = document.querySelector(\".iknow_tm_sidebar_2 .menu .active a\");\n            currentLink2(ccc, element);\n            var siblings = Array.from(this.children).filter(function(child) {\n                return child !== element.parentElement;\n            });\n            siblings.forEach(function(sibling) {\n                sibling.classList.remove(\"mleave\");\n            });\n        });\n        currentLink2(ccc, element);\n    },\n    maryMenuTransition () {\n        var ccc = document.querySelector(\".iknow_tm_topbar .wrapper .menu .ccc\");\n        var elements = document.querySelectorAll(\".iknow_tm_topbar .wrapper .menu a\");\n        var element = document.querySelector(\".iknow_tm_topbar .wrapper .menu .active a\");\n        elements.forEach(function(el) {\n            el.addEventListener(\"mouseenter\", function() {\n                var e = el;\n                currentLink(ccc, e);\n            });\n        });\n        var menu = document.querySelector(\".iknow_tm_topbar .wrapper .menu\");\n        menu.addEventListener(\"mouseleave\", function() {\n            currentLink(ccc, element);\n            var siblings = document.querySelectorAll(\".iknow_tm_topbar .wrapper .menu li\");\n            siblings.forEach(function(sibling) {\n                sibling.classList.remove(\"mleave\");\n            });\n        });\n        currentLink(ccc, element);\n        function currentLink(ccc, e) {\n            if (!e) {\n                return false;\n            }\n            var left = e.getBoundingClientRect().left;\n            var width = e.offsetWidth;\n            var menuLeft = document.querySelector(\".iknow_tm_topbar .wrapper .menu\").getBoundingClientRect().left;\n            e.parentNode.classList.remove(\"mleave\");\n            var siblings = document.querySelectorAll(\".iknow_tm_topbar .wrapper .menu li\");\n            siblings.forEach(function(sibling) {\n                sibling.classList.add(\"mleave\");\n            });\n            ccc.style.left = left - menuLeft + \"px\";\n            ccc.style.width = width + \"px\";\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utility/index.js\n"));

/***/ })

});